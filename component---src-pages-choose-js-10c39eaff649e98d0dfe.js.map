{"version":3,"sources":["webpack:///./src/components/data.js","webpack:///./src/pages/choose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"names":["Travelers","image","id","name","desc","storymapurl","dest","breakPoints","images","cat1","cat27","cat44","plate2","plate5","Masonrycontainer","styled","div","Masonrycss","Column","Masonry","props","state","columns","onResize","bind","self","ReferenceError","componentDidMount","this","window","addEventListener","componentWillUnmount","removeEventListener","getColumns","w","reduceRight","p","c","i","length","refs","offsetWidth","setState","mapChildren","col","numC","push","children","reduce","render","className","ref","map","ci","key","child","React","Component","tileCss","css","buttoncss","Tile","content","useState","fontClass","setFontClass","fonts","argos","deutsche","eltic","foucault","livingstone","onciale","ramsey","unzialish","src","alt","onClick","e","preventDefault","newIndex","indexOf","console","log","fontChanger","Choose","Helmet","charSet","styles","location","button","href","target","to"],"mappings":"oNAgCaA,EAAY,CAhCK,CAC7BC,MAAO,OACPC,GAAI,eACJC,KAAM,eACNC,KAAM,eACNC,YAAa,QACbC,KAAM,aAEoB,CAC1BL,MAAO,QACPC,GAAI,YACJC,KAAM,YACNC,KAAM,YACNC,YAAa,qGACbC,KAAM,aAEiB,CACvBL,MAAO,SACPC,GAAI,UACJC,KAAM,UACNC,KAAM,YACNC,YAAa,uGACbC,KAAM,aAEiB,CACvBL,MAAO,SACPC,GAAI,UACJC,KAAM,UACNC,KAAM,YACNC,YAAa,sGACbC,KAAM,c,ujMCeP,IAAIC,EAAc,CAAC,IAAK,IAAK,IAAK,MAC5BC,GAAS,CACX,KAAQC,IACR,MAASC,IACT,MAASC,IACT,OAAUC,IACV,OAAUC,KAERC,GAAmBC,IAAOC,IAAV,KAQhBC,GAAaF,IAAOC,IAAV,KAQVE,GAASH,IAAOC,IAAV,KAQNG,G,YACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CAAEC,QAAS,GACxB,EAAKC,SAAW,EAAKA,SAASC,KCjFvB,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,ED4Ee,KAHD,E,4CAKnBE,kBAAA,WACIC,KAAKL,WACLM,OAAOC,iBAAiB,SAAUF,KAAKL,W,EAE3CQ,qBAAA,WACIF,OAAOG,oBAAoB,SAAUJ,KAAKL,W,EAE9CU,WAAA,SAAWC,GACP,OAAO3B,EAAY4B,aAAY,SAACC,EAAGC,EAAGC,GAClC,OAAOD,EAAIH,EAAIE,EAAIE,IACpB/B,EAAYgC,QAAU,G,EAE7BhB,SAAA,WACI,IAAMD,EAAUM,KAAKK,WAAWL,KAAKY,KAAKrB,QAAQsB,aAC9CnB,IAAYM,KAAKP,MAAMC,SACvBM,KAAKc,SAAS,CAAEpB,QAASA,K,EAGjCqB,YAAA,WAGI,IAFA,IAAIC,EAAM,GACJC,EAAOjB,KAAKP,MAAMC,QACfgB,EAAI,EAAGA,EAAIO,EAAMP,IACtBM,EAAIE,KAAK,IAEb,OAAOlB,KAAKR,MAAM2B,SAASC,QAAO,SAACZ,EAAGC,EAAGC,GAErC,OADAF,EAAEE,EAAIO,GAAMC,KAAKT,GACVD,IACRQ,I,EAEPK,OAAA,WACI,OACA,YAAChC,GAAD,CAAYiC,UAAU,UAAUC,IAAI,WAC/BvB,KAAKe,cAAcS,KAAI,SAACR,EAAKS,GAAN,OACpB,YAACnC,GAAD,CAAQgC,UAAU,SAASI,IAAKD,GAC3BT,EAAIQ,KAAI,SAACG,EAAOjB,GAAR,OACL,mBAAKgB,IAAKhB,GAAIiB,Y,GAzChBC,IAAMC,WAkDtBC,GAAU,kBAAMC,YAAL,MACXC,GAAY,kBAAMD,YAAL,MA4BbE,GAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACUC,mBAAS,SAArCC,EADkB,KACPC,EADO,KAEpBC,EAAQ,CAClB,QACA,WACA,QACA,WACA,cACA,UACA,SACA,aAQI,OACA,mBAAKhB,UAAU,OAAOS,IAAKA,YAAF,IAG0BQ,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,MAyE/C,mBAAKxB,UAAU,WAAf,eAAqC,uBAAOY,EAAQxD,MAChD,mBAAKqD,IAAKA,YAAF,KAKJgB,IAAKnE,GAAOsD,EAAO,OAAYc,IAAI,WACvC,kBAAI1B,UAAWc,GAAYF,EAAQ3D,MACnC,iBAAGwD,IAAKA,YAAF,MAA0CG,EAAQ1D,MACxD,sBAAQyE,QAAS,SAAAC,GAAC,OAnG1B,SAAqBA,GACjBA,EAAEC,iBACF,IAAIC,EAAWd,EAAMe,QAAQjB,GAAa,EAAIE,EAAM3B,OAAS,EAAI,EAAI2B,EAAMe,QAAQjB,GAAa,EAChGkB,QAAQC,IAAIjB,EAAMc,IAClBf,EAAaC,EAAMc,IA+FOI,CAAYN,IAAI5B,UAAWc,EAAWL,IAAKC,IAAjE,wBAGSyB,G,kGACjBpC,OAAA,WACI,OAAS,mBAAKU,IAAKA,YAAF,MACb,YAAC2B,EAAA,OAAD,KACI,oBAAMC,QAAQ,UACd,uDAEJ,YAAC,IAAD,CAAQC,OAAQ7B,YAAF,IAGajD,OAO3B,YAAC,IAAD,CAAQ+E,SAAU7D,KAAKR,MAAMqE,WAC7B,YAAC,IAAD,MACA,mBAAKvC,UAAU,YAAYS,IAAKA,YAAF,OAU1B,YAAC7C,GAAD,KACQ,YAAC,GAAD,CAASP,YAAaA,GACjBP,EAAUoD,KAAI,SAACU,EAASxB,GAAV,OAAgBwB,EAAQ4B,OAAS,YAAC,eAAD,CAAc/B,IAAKD,GAASJ,IAAKhB,EAAGqD,KAAK,yCAAyCC,OAAO,UAAzF,KAAoG,YAAC,GAAD,CAAM9B,QAASA,KAA8B,YAAC,OAAD,CAAMR,IAAKhB,EAAGqB,IAAKD,GAASmC,GAAI,IAAM/B,EAAQ5D,IAA9C,KAAoD,YAAC,GAAD,CAAM4D,QAASA,UAGhR,YAAC,IAAD,Q,GAlCoBN,IAAMC","file":"component---src-pages-choose-js-10c39eaff649e98d0dfe.js","sourcesContent":["export const frontispiece = \t\t{\n\timage: 'cat1',\n\tid: 'frontispiece',\n\tname: 'Frontispiece',\n\tdesc: 'Frontispiece',\n\tstorymapurl: 'bloop',\n\tdest: '1990-1998'\n}\nexport const silkworms = \t\t{\n\timage: 'cat44',\n\tid: 'silkworms',\n\tname: 'Silkworms',\n\tdesc: 'Silkworms',\n\tstorymapurl: 'https://uploads.knightlab.com/storymapjs/f16f101e1b9e4f19898b53b294e8d1dd/novrep-vermis/index.html',\n\tdest: '1990-1998'\n}\nexport const printer = \t{\n\timage: 'plate2',\n\tid: 'printer',\n\tname: 'Printer',\n\tdesc: 'Silkworms',\n\tstorymapurl: 'https://uploads.knightlab.com/storymapjs/f16f101e1b9e4f19898b53b294e8d1dd/novrep-printer/index.html ',\n\tdest: '1990-1998'\n}\nexport const america = \t{\n\timage: 'plate5',\n\tid: 'america',\n\tname: 'America',\n\tdesc: 'Silkworms',\n\tstorymapurl: 'https://uploads.knightlab.com/storymapjs/f16f101e1b9e4f19898b53b294e8d1dd/novrep-america/index.html',\n\tdest: '1990-1998'\n}\nexport const Travelers = [ \n\tfrontispiece, silkworms, printer, america\n]\n","import React, { useState } from 'react';\n/** @jsx jsx */\nimport { css, jsx, Global } from '@emotion/core';\nimport styled from \"@emotion/styled\";\nimport { Travelers } from '../components/data';\nimport { Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport Navbar from '../components/navbar-iotmw';\nimport Footer from '../components/footer';\nimport TwitterButton from '../components/twitter-iotmw';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\nimport '../components/layout.css'\n\n\nimport argos from '../fonts/Argos-Regular.ttf.woff'\nimport bucephalus from '../fonts/Bucephalus.ttf.woff'\nimport deutsche from '../fonts/Deutsche-Uncialis.ttf.woff'\nimport eltic from '../fonts/Eltic.ttf.woff'\nimport foucault from '../fonts/Foucault.ttf.woff'\nimport livingstone from '../fonts/Livingstone.ttf.woff'\nimport onciale from '../fonts/Onciale-PhF.ttf.woff'\nimport ramsey from '../fonts/Ramsey-SD.ttf.woff'\nimport unzialish from '../fonts/UnZialish.ttf.woff'\n// // images\n// import amyWingreen from '../images/tm-amyWingreen.png';\n// import blackHawk from '../images/tm-blackHawk.png';\n// import errettGraham from '../images/tm-errettGraham.png';\n// import josephWhitehouse from '../images/tm-josephWhitehouse.png';\n// import juliaNewberry from '../images/tm-juliaNewberry.png';\n// import jhMagee from '../images/tm-jhMagee.png';\n// import eraBellThompson from '../images/tm-eraBellThompson.png';\n// import wolfej from '../images/wolfej.png';\n// import cgPearce from '../images/tm-cgPearce.png';\n// // import thx from '../images/tm-thx.png';\n// // import xmas from '../images/tm-xmas.png';\n// import raster from '../images/tm-raster.png';\n// import noone from '../images/noone.png';\n\n\nimport cat1 from '../images/cat-1.png';\nimport cat27 from '../images/cat-27.png';\nimport cat44 from '../images/cat-44.png';\nimport plate2 from '../images/plate-2.png';\nimport plate5 from '../images/plate-5.png';\n\nlet breakPoints = [350, 500, 750, 1050];\nconst images = {\n    'cat1': cat1,\n    'cat27': cat27,\n    'cat44': cat44,\n    'plate2': plate2,\n    'plate5': plate5,\n};\nconst Masonrycontainer = styled.div`\n    width: 85%;\n    margin: auto;\n    margin-top: 10px;\n    text-align: center;\n    padding: 4px;\n    color: #efefef;\n`\nconst Masonrycss = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-content: stretch;\n    width: 100%;\n    margin: auto;\n`\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-content: stretch;\n    flex-basis: 235px;\n    // width: 235px;\n`\nclass Masonry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { columns: 1 };\n        this.onResize = this.onResize.bind(this);\n    }\n    componentDidMount() {\n        this.onResize();\n        window.addEventListener('resize', this.onResize);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n    getColumns(w) {\n        return breakPoints.reduceRight((p, c, i) => {\n            return c < w ? p : i;\n        }, breakPoints.length) + 1;\n    }\n    onResize() {\n        const columns = this.getColumns(this.refs.Masonry.offsetWidth);\n        if (columns !== this.state.columns) {\n            this.setState({ columns: columns });\n        }\n    }\n    mapChildren() {\n        let col = [];\n        const numC = this.state.columns;\n        for (let i = 0; i < numC; i++) {\n            col.push([]);\n        }\n        return this.props.children.reduce((p, c, i) => {\n            p[i % numC].push(c);\n            return p;\n        }, col);\n    }\n    render() {\n        return (\n        <Masonrycss className=\"masonry\" ref=\"Masonry\">\n            {this.mapChildren().map((col, ci) => \n                <Column className=\"column\" key={ci}>\n                    {col.map((child, i) => \n                        <div key={i}>{child}</div>\n                    )}              \n                </Column>\n                )}\n        </Masonrycss>\n        )\n    }\n}\n\nconst tileCss = () => css`text-decoration: none;`\nconst buttoncss = () => css`\n    cursor: pointer;\n    text-decoration: none;\n    display: block;\n    padding: 10px;\n    margin: 15px auto;\n    background: rgba(0,0,0,1);;\n    color:  rgba(255,255,255,0.75);\n    // font-family: eltic, serif;   \n    font-size: 1rem;\n    border: 1px solid transparent;\n    text-transform: uppercase;\n    // font-weight: 900;\n    -webkit-box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.75);\n    -moz-box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.75);\n    box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.75);\n    transition: all .15s ease-in-out;\n    &:hover {\n        background: white;\n        color: black;\n        font-weight: 700;\n        border: 1px solid black;\n        -webkit-box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.95);\n        -moz-box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.95);\n        box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.95);\n    }\n`\n\nconst Tile = ({ content }) => {\n    const [ fontClass, setFontClass ] = useState('argos')\n    const fonts = [\n'argos',\n'deutsche',\n'eltic',\n'foucault',\n'livingstone',\n'onciale',\n'ramsey',\n'unzialish'\n    ]\n    function fontChanger(e){\n        e.preventDefault()\n        let newIndex = fonts.indexOf(fontClass) + 1 > fonts.length - 1 ? 0 : fonts.indexOf(fontClass) + 1\n        console.log(fonts[newIndex])\n        setFontClass(fonts[newIndex])\n    }\n    return (\n    <div className=\"tile\" css={css`\n    * {text-decoration: none;}\n\n    @font-face { font-family: argos;        src: url(${argos}) ; }\n    @font-face { font-family: deutsche;     src: url(${deutsche}) ; }\n    @font-face { font-family: eltic;        src: url(${eltic}) ; }\n    @font-face { font-family: foucault;     src: url(${foucault}) ; }\n    @font-face { font-family: livingstone;  src: url(${livingstone}) ; }\n    @font-face { font-family: onciale;      src: url(${onciale}) ; }\n    @font-face { font-family: ramsey;       src: url(${ramsey}) ; }\n    @font-face { font-family: unzialish;    src: url(${unzialish}) ; }\n        .argos       { font-family: argos;       }\n        .deutsche    { font-family: deutsche;    }\n        .eltic       { font-family: eltic;       }\n        .foucault    { font-family: foucault;    }\n        .livingstone { font-family: livingstone; }\n        .onciale     { font-family: onciale;     }\n        .ramsey      { font-family: ramsey;      }\n        .unzialish   { font-family: unzialish;   }\n        text-decoration: none;\n        display: block;           \n        border: 2px solid rgba(0,0,0,1); \n        background: rgba(255,255,255,0.85);\n        box-shadow: 10px 10px 30px 0px rgba(0,0,0,0.75);\n        background-attachment: fixed;\n        background-position: center;\n        color: #000;\n        margin: 4px;\n        border: 2px solid #27452B;\n        flex-basis: 200px;\n        padding: 10px 10px 25px 10px;\n        position: relative;\n        transition: all .15s ease-in-out;\n        & p {\n            padding: 5px 10px 15px 10px;\n        }\n        &:before {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            z-index: -1;\n            -webkit-box-shadow: 10px 10px 50px 0px rgba(0,0,0,0.75);\n            -moz-box-shadow: 10px 10px 50px 0px rgba(0,0,0,0.75);\n            box-shadow: 10px 10px 50px 0px rgba(0,0,0,0.75);\n        }\n        &:hover {\n            background: #fff;\n            background-attachment: fixed;\n            background-position: center;\n            & .tilecap {\n                color: rgba(255,255,255,1);\n            }\n        }\n        & h2 {\n            font-size: calc(12px + 1.1vw);\n            padding: 0;\n            margin: 0;\n            overflow-wrap: normal;\n        }\n        & .tilecap, .tilecapSeasonal {\n            font-family: 'Lato', sans-serif;\n            position: absolute;\n            top: -2px;\n            left: -2px;\n            right: -2px;\n            font-weight: 700;\n            // border-radius: 6px 6px 0 0;\n            color: rgba(255,255,255,0.75);\n        }\n        & .tilecap {\n            border: 2px solid #27452B;\n            border-bottom: 2px solid transparent;\n        }\n        & .tilecapSeasonal {\n            color: white;\n            line-height: 52px;\n            border: 2px solid #27452B;\n            border-bottom: 2px solid transparent;\n        }\n    `}>\n        <div className=\"tilecap\">Destination:<br />{content.dest}</div>\n            <img css={css`\n                    padding: 55px 25px 5px 25px;\n                    width: 150px;\n                    filter: drop-shadow(0 0 0.75rem #000);\n                `} \n                src={images[content['image']]} alt=\"person\"/>\n            <h2 className={fontClass}>{content.name}</h2>\n            <p css={css`font-family: 'Lato', sans-serif;`}>{content.desc}</p>\n            <button onClick={e => fontChanger(e)} className={fontClass} css={buttoncss} >Begin your journey</button>\n        </div>\n    )}\nexport default class Choose extends React.Component {\n    render() {\n        return ( <div css={css`padding-top: 65px;`}>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Nova Reperta Time Machine</title>\n            </Helmet>\n            <Global styles={css`\n                body {\n                    margin: 0;\n                    background: url('${cat27}');\n                    background-size: cover;\n                    background-position: center;\n                    background-attachment: fixed;\n                    position: relative;\n                }\n            `}/>\n            <Navbar location={this.props.location} />\n            <TwitterButton />\n            <div className=\"container\" css={css`\n                position: fixed;\n                overflow: hidden;\n                left: 0;\n                right: 0;\n                top: 0;\n                bottom: 0;\n                z-index: -1;\n                \n            `}></div>\n                <Masonrycontainer>\n                        <Masonry breakPoints={breakPoints}>\n                            {Travelers.map((content, i) => content.button ? <OutboundLink css={tileCss} key={i} href=\"//publications.newberry.org/transcribe\" target=\"_blank\">  <Tile content={content}  /></OutboundLink> : <Link key={i} css={tileCss} to={'/' + content.id}>  <Tile content={content}  /></Link>)}\n                        </Masonry>\n                </Masonrycontainer>\n                <Footer />\n            </div>\n        )\n    }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"sourceRoot":""}